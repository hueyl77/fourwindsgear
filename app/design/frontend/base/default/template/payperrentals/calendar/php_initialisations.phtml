<?php
/** @var $this ITwebexperts_Payperrentals_Block_Catalog_Product_View */

$_product = $this->getProduct();

$_useGlobalDates = ITwebexperts_Payperrentals_Helper_Data::isUsingGlobalDates();
/** @var $_configHelper ITwebexperts_Payperrentals_Helper_Config */
$_configHelper = Mage::helper('payperrentals/config');
$_useNonsequential = Mage::helper('payperrentals/config')->isNonSequentialSelect(Mage::app()->getStore()->getId());

$_useFlicker = Mage::helper('payperrentals/config')->getThemeStyle(Mage::app()->getStore()->getId()) == ITwebexperts_Payperrentals_Model_Source_Themestyle::RTRW_STYLE;
$_useThemeRoller = Mage::helper('payperrentals/config')->getThemeStyle(Mage::app()->getStore()->getId()) != ITwebexperts_Payperrentals_Model_Source_Themestyle::DEFAULT_STYLE;

$_currentTimeStamp = Mage::getSingleton('core/date')->timestamp(time());
$_customOptions = $this->getCustomOptions();
list($_storeOpen, $_storeClose) = $_configHelper->getStoreTime();

if ($_product) {
    $_useTimes = ITwebexperts_Payperrentals_Helper_Data::useTimes($_product->getId());
} else {
    /** No need reconfigurate for admin, because use times already defined in data.phtml */
    if (!Mage::app()->getStore()->isAdmin()) {
        $_useTimes = 0;
    }else if(isset($quoteItemId)){
        $_useTimes = ITwebexperts_Payperrentals_Helper_Data::useTimes($quoteItemId);
    }
}


$_excludeHoursStart = array();
$_excludeHoursEnd = array();
$_exludeMinutesStart = array();
$_exludeMinutesEnd = array();

$_minRentalPeriod = ITwebexperts_Payperrentals_Helper_Config::getMinimumPeriod(($_product)?$_product->getId():0);
$_maxRentalPeriod = ITwebexperts_Payperrentals_Helper_Config::getMaximumPeriod(($_product)?$_product->getId():0);
$_minRentalMessageText = ITwebexperts_Payperrentals_Helper_Config::getMinimumMessageText(($_product)?$_product->getId():0);
$_maxRentalMessageText = ITwebexperts_Payperrentals_Helper_Config::getMaximumMessageText(($_product)?$_product->getId():0);

if (Mage::app()->getStore()->isAdmin()) {
    $_minRentalPeriod = 0;
    $_maxRentalPeriod = 0;
}


//todo remove  product attribute AutoselectEnddate

$_autoSelectEndDate = false;
$_selectedToEndPeriod = 0;
$_selectedToStartPeriod = 0;
$_selectedArray = false;

$_selectedArray = ITwebexperts_Payperrentals_Helper_Config::getFixedSelection();

    if ($_selectedArray !== false || ITwebexperts_Payperrentals_Helper_Config::useListButtons()){
        $_autoSelectEndDate = true;
    }

    if (Mage::app()->getStore()->isAdmin()) {
        $_autoSelectEndDate = false;
    }

    if ($_selectedArray !== false) {
       if (ITwebexperts_Payperrentals_Helper_Config::NoCalendarUseTodayAsStartDate()) {
           if (ITwebexperts_Payperrentals_Helper_Config::isNextHourSelection()) {
               $_selectedToStartPeriod = date('Y-m-d', strtotime('+1 day', time()));
           } else {
               $_selectedToStartPeriod = date('Y-m-d', strtotime('+0 day', time()));
           }
       }else{
           if(Mage::getSingleton('core/session')->getData('startDateInitial') && ITwebexperts_Payperrentals_Helper_Data::isUsingGlobalDates()){
               $timeNow = Mage::getSingleton('core/session')->getData('startDateInitial');
               $_selectedToStartPeriod = date('Y-m-d', strtotime('+0 day', strtotime($timeNow)));
           }
       }
        /*
         * This part is commented out because is no need to auto select the first date
         *
       else {
                $timeNow = (Mage::getSingleton('core/session')->getData('startDateInitial')) ? Mage::getSingleton(
                    'core/session'
                )->getData('startDateInitial') : date('Y-m-d H:i:s');
                $_selectedToStartPeriod = date('Y-m-d', strtotime('+0 day', strtotime($timeNow)));
        }*/
        $_selectedToEndPeriod = ($_selectedArray[0]);
    }

$useButtons = ITwebexperts_Payperrentals_Helper_Config::useListButtons();

$_minRentalMessage = $this->__('Minimum rental period is "%s". Please make sure you select at least that number',
    $_minRentalMessageText
);
$_maxRentalMessage = $this->__('Maximum rental period is "%s". Please make sure you select no more than that number',
    $_maxRentalMessageText
);
$_betweenMessage = $this->__('There are unavailable days between the selected dates');

$_booked = array();
if ($_product) {
    $_maxQty = ITwebexperts_Payperrentals_Helper_Inventory::isAllowedOverbook($_product) ? 10000 : ITwebexperts_Payperrentals_Helper_Inventory::getQuantity($_product);
} else {
    $_maxQty = 0;
}

$_timeBooked = array();
$_timeBookedDate = array();

$_disableWithMessage = $_product && $_product->getDisabledWithMessage() == ITwebexperts_Payperrentals_Model_Product_Disabledwithmessage::STATUS_ENABLED ? 'true' : 'false';
$_disabledMessage = $this->__('If you require service within 48 hours, please contact us directly');

if($_product){
    $_productId = $_product->getId();
} else {
    $_productId = null;
}

$_disabledDays = ITwebexperts_Payperrentals_Helper_Data::getDisabledDays($_productId);

$_paddingDays = ITwebexperts_Payperrentals_Helper_Data::getProductPaddingDays($_productId, $_currentTimeStamp);
$_paddingDays = ITwebexperts_Payperrentals_Helper_Data::toFormattedDateArray($_paddingDays);
if($_selectedToStartPeriod != 0){
    $_selectedToStartPeriod = date('Y-m-d', strtotime('+'.count($_paddingDays).' day', strtotime($_selectedToStartPeriod)));
}
$_disabledDaysStart = array();
$_disabledDaysEnd = array();
$_ignoreTurnoverDay = array();
$_turnoverTimeBefore = 0;
$_turnoverTimeAfter = 0;

$_isDisabled = ($_maxQty >= 1 || !$_product) ? false : true;
if (isset($isAdmin) && $isAdmin == true) {
    $_isDisabled = false;
}
$_blockedDates = ITwebexperts_Payperrentals_Helper_Data::getDisabledDates($_productId);
$_blockedDates = ITwebexperts_Payperrentals_Helper_Data::toFormattedDateArray($_blockedDates);

$_locDateFormat = Mage::app()->getLocale()->getDateFormat(Mage_Core_Model_Locale::FORMAT_TYPE_SHORT);
$magentoVersion = Mage::getVersion();
if (version_compare($magentoVersion, '1.9.1', '>=')){
    if (strpos($_locDateFormat, "YYY") === false && strpos($_locDateFormat, "YY") === false) $_locDateFormat = str_replace("Y", "YYYY", $_locDateFormat);
    if (strpos($_locDateFormat, "yyy") === false && strpos($_locDateFormat, "yy") === false) $_locDateFormat = str_replace("y", "yyyy", $_locDateFormat);
}
else{
    if (strpos($_locDateFormat, "YYY") === false) $_locDateFormat = str_replace("YY", "YYYY", $_locDateFormat);
    if (strpos($_locDateFormat, "yyy") === false) $_locDateFormat = str_replace("yy", "yyyy", $_locDateFormat);
}

$_datestr = ITwebexperts_Payperrentals_Helper_Date::convertIsoToDatepickerFormat($_locDateFormat);

$localeCode = substr(Mage::app()->getLocale()->getLocaleCode(), 0, strpos(Mage::app()->getLocale()->getLocaleCode(), '_'));
?>



<?php
if ($this->getProduct() && (!isset($isAdmin) || $isAdmin == false)) {
    $_jsContainerPrefix = $this->getJsContainerPostfix();
    $_jsIdPrefix = 'datepick' . $this->getProduct()->getId();
} else {
    if (!isset($isAdmin) || $isAdmin == false) {
        $_jsContainerPrefix = '.calendarSelector';
        $_jsIdPrefix = 'datepick0';
    } else {
        $_jsContainerPrefix = '#calendarTable' . $quoteItemId;
        $_jsIdPrefix = 'datepick' . $quoteItemId;
    }
}
if (!isset($isAdmin) || $isAdmin == false) {
    $_jsFunctionPrefix = $this->getJsFunctionPostfix();
} else {
    $_jsFunctionPrefix = 'Adm';
}

?>

<?php
$_startDateInitialVal = Mage::getSingleton('core/session')->getData('startDateInitial');
$_endDateInitialVal = Mage::getSingleton('core/session')->getData('endDateInitial');

if (isset($isAdmin) && $isAdmin == true && isset($quoteItemId) && $quoteItemId != -1 && Mage::app()->getRequest()->getActionName() != 'configureProductToAdd'):
    $buyRequest = $quoteItem->getBuyRequest();
    $_showTime = (bool)Mage::getResourceModel('catalog/product')
        ->getAttributeRawValue(
            $quoteItem->getProductId(),
            'payperrentals_use_times',
            $quoteItem->getStoreId()
        );
    if (!$_useNonsequential) {
        $_startDateInitialVal = ($buyRequest->getStartDate() != '') ? $buyRequest->getStartDate() : (($_startDateInitialVal) ? $_startDateInitialVal : false);
        $_endDateInitialVal = ($buyRequest->getEndDate() != '') ? $buyRequest->getEndDate() : (($_endDateInitialVal) ? $_endDateInitialVal : false);
    } else {
        $_startDateInitialVal = ($buyRequest->getStartDate() != '') ? ITwebexperts_Payperrentals_Helper_Date::localiseNonsequentialBuyRequest($buyRequest->getStartDate(), $_showTime) : (($_startDateInitialVal) ? $_startDateInitialVal : false);
        $_endDateInitialVal = ($buyRequest->getStartDate() != '') ? ITwebexperts_Payperrentals_Helper_Date::localiseNonsequentialBuyRequest($buyRequest->getStartDate(), $_showTime) : (($_startDateInitialVal) ? $_startDateInitialVal : false);
    }
endif;

if ($_startDateInitialVal):
    list($_startDateInitialVal, $_endDateInitialVal) = ITwebexperts_Payperrentals_Helper_Date::convertDatepickerToDbFormat($_startDateInitialVal, $_endDateInitialVal);

    $_startDateInitArr = explode(' ', $_startDateInitialVal);
    $_startDateInit = $_startDateInitArr[0];
    if (isset($_startDateInitArr[1])):
        $_startTimeInit = $_startDateInitArr[1];
    else:
        $_startTimeInit = '';
    endif;
    if ($_useNonsequential):
        $_startDateInit = $_startDateInitialVal;
        $_startTimeInit = '';
    endif;


    $_endDateInitArr = explode(' ', $_endDateInitialVal);
    $_endDateInit = $_endDateInitArr[0];
    if (isset($_endDateInitArr[1])):
        $_endTimeInit = $_endDateInitArr[1];
    else:
        $_endTimeInit = '';
    endif;

else:
    $_startDateInit = false;
    $_endDateInit = false;
    $_startTimeInit = false;
    $_endTimeInit = false;
endif;

