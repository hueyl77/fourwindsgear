<?php

?>
<?php $_htmlId      = $this->getElement()->getHtmlId() ?>
<?php $_htmlClass   = $this->getElement()->getClass() ?>
<?php $_htmlName    = $this->getElement()->getName() ?>
<?php $_readonly    = $this->getElement()->getReadonly() ?>

<!-- container id mainly for warehouses module since without it we only need one -->
<?php
$this->getChild('serialform')->setData('warehouseid',1);
?>
<tr>
    <td class="label"><?php //echo $this->getElement()->getLabel() ?></td>
    <td colspan="10" class="grid serialnumbers">
<?php
echo $this->getChildHtml('serialform');
?>
    </td>
</tr>

		<script type="text/javascript">
			//<![CDATA[
			var serialNumbersRowTemplate = '<tr>'
					+ '<td class="nobr"><input class="sn required-entry" name="<?php echo $_htmlName ?>[{{index}}][warehouseid]" id="serialnumbers_row_{{index}}_warehouseid" type="hidden" value="{{warehouseid}}"/><input class="sn required-entry" name="<?php echo $_htmlName ?>[{{index}}][sn]" id="serialnumbers_row_{{index}}_sn"/></td>'
					+ '<td><select class="status required-entry" name="<?php echo $_htmlName ?>[{{index}}][status]" id="serialnumbers_row_{{index}}_status">'
					+ '<option value="<?php echo 'A';//$_groupId ?>"><?php echo Mage::helper('payperrentals')->__('Available'); ?></option>'
					+ '<option value="<?php echo 'O';//$_groupId ?>"><?php echo Mage::helper('payperrentals')->__('Out'); ?></option>'
					+ '<option value="<?php echo 'B';//$_groupId ?>"><?php echo Mage::helper('payperrentals')->__('Broken'); ?></option>'
					+ '<option value="<?php echo 'M';//$_groupId ?>"><?php echo Mage::helper('payperrentals')->__('Maintenance'); ?></option>'
					+ '</select></td>'
                    + '<td><input name="<?php echo $_htmlName?>[{{index}}][dateacquired]" id="serialnumbers_row_{{index}}_dateacquired" class="timepicker"/></td>'
					+ '<td class="last"><input type="hidden" name="<?php echo $_htmlName ?>[{{index}}][delete]" class="delete" value="" id="excludedates_row_{{index}}_delete" />'
					+ '<button title="<?php echo Mage::helper('payperrentals')->__("Delete Tier") ?>" type="button" class="scalable delete icon-btn delete-product-option" id="serialnumbers_row_{{index}}_delete_button" onclick="return serialNumbersControl.deleteItem(event);">'
					+ '<span><span><span><?php echo Mage::helper('payperrentals')->__("Delete") ?></span></span></span></button></td>'
					+ '</tr>';

            var getWarehouseIdFromElement = function(el){
                return $(el).up('table').readAttribute('warehouseid');
            };

            /* containerid is the tbody id tag for each serial numbers table
            * is in the format res_serialnumbers_warehouseid_container
            * */

			var serialNumbersControl = {
				template: new Template(serialNumbersRowTemplate, new RegExp('(^|.|\\r|\\n)({{\\s*(\\w+)\\s*}})', "")),
				itemsCount: 0,
				addItem : function () {
				<?php if ($_readonly): ?>
					if (arguments.length < 4) {
						return;
					}
					<?php endif; ?>
                    var warehouseid = arguments[0];
                    var containerid = '<?php echo $_htmlId ?>_'+warehouseid+'_container';
					var data = {
						sn: '',
                        warehouseid: warehouseid,
						status: '<?php echo 'A'; ?>',
                        dateacquired: '<?php echo date('Y-m-d',time()); ?>',
						readOnly: false,
						index: this.itemsCount++
					};
					if(arguments.length >= 2) {
						data.sn      = arguments[1];
						data.status      = arguments[2];
                        data.dateacquired = arguments[3];
					}
					if (arguments.length == 4) {
						data.readOnly = arguments[4];
					}

					Element.insert($(containerid), {
						bottom : this.template.evaluate(data)
					});

					$('serialnumbers_row_' + data.index + '_sn').value = data.sn;
					$('serialnumbers_row_' + data.index + '_status').value = data.status;
                    $('serialnumbers_row_' + data.index + '_warehouseid').value = data.warehouseid;
                    $('serialnumbers_row_' + data.index + '_dateacquired').value = data.dateacquired;

					if (data.readOnly == '1') {
						['sn', 'status', 'dateacquired', 'delete'].each(function(idx){
							$('serialnumbers_row_'+data.index+'_'+idx).disabled = true;
						});
						$('serialnumbers_row_'+data.index+'_delete_button').hide();
					}
                    applyTimePicker("#serialnumbers_row_" + data.index + "_dateacquired");

				<?php if ($_readonly): ?>
					$(containerid).select('input', 'select').each(this.disableElement);
					$(containerid).up('table').select('button').each(this.disableElement);
					<?php else: ?>
					$(containerid).select('input', 'select').each(function(el){ Event.observe(el, 'change', el.setHasChanges.bind(el)); });
					<?php endif; ?>

				},
				disableElement: function(el) {
					el.disabled = true;
					el.addClassName('disabled');
				},
				deleteItem: function(event) {
					var tr = Event.findElement(event, 'tr');
					if (tr) {
						Element.select(tr, '.delete').each(function(elem){elem.value='1'});
						Element.select(tr, ['input', 'select']).each(function(elem){elem.hide()});
						Element.remove(tr);
						//Element.addClassName(tr, 'no-display template');
					}
					return false;
				}
			};

            var addNewSerialNumber = function(buttonElement){
                var warehouseid = getWarehouseIdFromElement(buttonElement);
                serialNumbersControl.addItem(warehouseid);
            };

            <!-- On page load, populate serial numbers -->
            $jppr(window).load(function(){
			<?php foreach ($this->getValues() as $_item): ?>
            <?php if($_item['warehouse_id']){
            $warehouseid = $_item['warehouse_id'];
            } else {$warehouseid = 1;} ?>
			serialNumbersControl.addItem('<?php echo $warehouseid; ?>','<?php echo $_item['sn']; ?>', '<?php echo $_item['status']; ?>','<?php echo Mage::getModel('payperrentals/serialnumbers')->ifSerialIsNullSetToProductCreatedDate($_item['date_acquired'],$_item['sn']); ?>', <?php echo (int)!empty($_item['readonly'])?>);
				<?php endforeach; ?>
			<?php if ($_readonly): ?>
			$('<?php echo $_htmlId ?>_container').up('table').select('button')
					.each(serialNumbersControl.disableElement);
				<?php endif; ?>
            });


            function triggerEventProtoype(element, eventName) {
                // safari, webkit, gecko
                if (document.createEvent)
                {
                    var evt = document.createEvent('HTMLEvents');
                    evt.initEvent(eventName, true, true);
                    return element.dispatchEvent(evt);
                }
                // Internet Explorer
                if (element.fireEvent) {
                    return element.fireEvent('on' + eventName);
                }
            }


            // Observer generate serials button
			document.observe("dom:loaded", function() {
				$$('.generateBut').each(function(link) {
						link.observe("click", function(event) {
                            var warehouseid = getWarehouseIdFromElement(link);
						    var nrToGen = $('genInput').getValue();
						if(!(!isNaN(parseFloat(nrToGen)) && isFinite(nrToGen))){
							nrToGen = 1;
						}
						var reloadurl = '<?php echo $this->getSerialUrl() ?>';
							Element.show('loading-mask');
							var sn_ids = new Array();
							$$('.sn').each( function(field) {
								//alert('a');
								//alert(field.value);
								sn_ids.push(field.value);
							});
							//alert(sn_ids[0]);
							new Ajax.Request(reloadurl, {
							method: 'post',
							parameters: {
								'nr':nrToGen,
								'sns[]' : sn_ids
							},
							onSuccess: function(transport) {
								Element.hide('loading-mask');
								var json = transport.responseText.evalJSON();
								for(i=0;i<json.sn.length;i++){
									serialNumbersControl.addItem(warehouseid,json.sn[i], 'A', '<?php echo date('Y-m-d',time()); ?>',false);
								}
							}
						});
						event.stop();
					});
				});






                // Gray out/disable serial number fields if use serials is disabled
                if($('payperrentals_use_serials')){
                $('payperrentals_use_serials').observe("change", function(event) {
                //$jppr('#payperrentals_use_serials').change(function(){
                    if($F('payperrentals_use_serials') == '0'){
                        $$('table#serialnumbers_table button').each(function(field){
                            field.writeAttribute('disabled', 'disabled');
                            if(!field.hasClassName('disabled')){
                                field.toggleClassName('disabled');
                            }
                        });
                        $$('table#serialnumbers_table input').each(function(field){
                            field.writeAttribute('readonly', 'readonly');
                        });
                    }else{
                        $$('table#serialnumbers_table button').each(function(field){
                            if(field.hasAttribute('disabled')){
                                field.removeAttribute("disabled");
                             }
                            if(field.hasClassName('disabled')){
                                field.toggleClassName('disabled');
                            }
                        });

                        $$('table#serialnumbers_table input').each(function(field){
                            if(field.hasAttribute('readonly')){
                                field.removeAttribute('readonly');
                            }
                        });
                    }
                });
                triggerEventProtoype($('payperrentals_use_serials'),'change');
                }
			});

            // Apply time picker function for serial number date acquired
            function applyTimePicker($selector){
                $jppr($selector).datetimepicker({
                    showOn: "both",
                    buttonImage: "<?php echo ITwebexperts_Payperrentals_Helper_Html::getCalendarPopupImage(); ?>",
                    buttonImageOnly: true,
                    buttonText: "Select date",
//                formatDate: "<?php //echo Mage::app()->getLocale()->getDateFormat(Mage_Core_Model_Locale::FORMAT_TYPE_SHORT)?>//",
                    timeFormat: 'HH:mm:ss',
                    stepHour: 1,
                    stepMinute: 30,
                    showSecond: false,
                    showButtonPanel: false
                });
            }
		</script>


