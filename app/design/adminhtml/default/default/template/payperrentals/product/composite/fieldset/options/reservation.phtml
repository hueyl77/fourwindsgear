<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     default_default
 * @copyright   Copyright (c) 2012 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>

<?php /* @var $this Mage_Adminhtml_Block_Catalog_Product_Composite_Fieldset_Options */ ?>
<?php $options = Mage::helper('core')->decorateArray($this->getOptions()); ?>

<?php
$isAdmin = true;
$quoteItemId = -1;
if(Mage::app()->getRequest()->getActionName() == 'configureProductToAdd'){
    $quoteItemId = (int)$this->getRequest()->getParam('id');
}else if (Mage::app()->getRequest()->getActionName() != 'configureProductToAdd') {
    $quoteItemId = (int)$this->getRequest()->getParam('id');
    $quoteItem = Mage::getModel('sales/quote_item')->load($quoteItemId);
    if ($quoteItem->getId()) {
        $optionCollection = Mage::getModel('sales/quote_item_option')->getCollection()->addItemFilter(
            array($quoteItemId)
        );
        $quoteItem->setOptions($optionCollection->getOptionsByItem($quoteItem));
        $quoteItemId = $quoteItem->getProductId();
    }
}
?>
<?php if(ITwebexperts_Payperrentals_Helper_Data::isReservation($this->getProduct()->getId() )) : ?>

    <?php
    $_product = $this->getProduct();
    if(Mage::getSingleton('core/session')->getData('startDateInitial') && Mage::getSingleton('core/session')->getData('endDateInitial')){
        $qty = 1;
        $startDate = Mage::getSingleton('core/session')->getData('startDateInitial');
        $endDate = Mage::getSingleton('core/session')->getData('endDateInitial');
        $isAvailable = true;

        $priceAmount = ITwebexperts_Payperrentals_Helper_Price::calculatePrice($_product, $startDate, $endDate, $qty, ITwebexperts_Payperrentals_Helper_Data::getCustomerGroup());
        if($priceAmount == -1){
            $isAvailable = false;
        }
        $maxQty = ITwebexperts_Payperrentals_Helper_Inventory::getQuantity($_product, $startDate, $endDate);
        if($maxQty == 'is_overbook'){
            $maxQty = 1;
        }

    }else{
        $isAvailable = false;
    }
    ?>

    <script type="text/javascript">
    price = '<?php echo Mage::helper('core')->currency($priceAmount);?>';
    stockAvail = '<?php echo $maxQty;?>';
    stockRest = '<?php  echo ($maxQty - $qty);?>';
    checkboxWasPressed = $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent().attr('is_pressed') == '0';
    isInQuote = <?php echo Mage::app()->getRequest()->getActionName() == 'configureQuoteItems'?'true':'false'; ?>;
    $quoteItemObject = $jppr('a[product_id="<?php echo $quoteItemId;?>"]').parent().parent();
    isAvailable = <?php echo $isAvailable?'true':'false';?>;
    noPriceMessage = '<?php echo $this->__('No price is available for these rental periods');?>';
    noQtyMessage = '<?php echo $this->__('No quantity available for these rental periods');?>';
    getPriceAndAvailabilityUrl = '<?php echo Mage::getUrl("payperrentals_admin/adminhtml_ajax/getpriceandavailability/",array('product_id'=>$this->getProduct()->getId(),'form_key'=> Mage::getSingleton('core/session')->getFormKey()))?>'
    $calendarTableObject = $jppr('#calendarTable<?php echo $quoteItemId;?>').parent();
    $calendarTableObjectChild = $jppr('#calendarTable<?php echo $quoteItemId;?>');
    updateAllDatesUrl = '<?php echo Mage::getUrl("payperrentals_admin/adminhtml_ajax/getupdatealldates/", array('form_key'=> Mage::getSingleton('core/session')->getFormKey()))?>';
    selectNewCustomerUrl = '<?php echo Mage::getUrl("payperrentals_admin/adminhtml_ajax/getupdatecustomer/",array('form_key'=> Mage::getSingleton('core/session')->getFormKey()))?>'
    estimateCreateUrl = '<?php echo Mage::getUrl("payperrentals_admin/adminhtml_ajax/setEstimatedCreate/",array('form_key'=> Mage::getSingleton('core/session')->getFormKey()))?>'
    var scrpt = document.createElement('script');
    scrpt.src='<?php echo Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_JS) .'itwebexperts_payperrentals/datepick/calendarFunctionsAdmin.js'; ?>';
    document.head.appendChild(scrpt);
    </script>



    <div id="calendarTable<?php echo $quoteItemId; ?>" class="calendarTables">
        <?php
        $calendar = Mage::helper('payperrentals/calendar');
        echo $calendar->getCalendar(null, false, $quoteItemId, $quoteItem);
        ?>
        <script type="text/javascript">
            onDocReady();
        </script>
    <input type="hidden" name="configurate-product-id" value="<?php echo $this->getProduct()->getId() ?>">

    <div class="priceList" style="margin-top:10px;"> Price List:<br/>
        <?php echo ITwebexperts_Payperrentals_Helper_Price::getPriceListHtml($this->getProduct(), Mage::getStoreConfig(
                ITwebexperts_Payperrentals_Helper_Config::XML_PATH_PRICING_ON_LISTING
            )); ?>
    </div>
    <div class="datesPrice" style="margin-top:10px;font-weight: bold;"></div>
</div>
    <?php
    echo ITwebexperts_Payperrentals_Helper_Price::getAdminDamageWaiverHtml($quoteItem, $_product->getId(), true, $damageWaiver);
    ?>
<?php endif; ?>


<?php if (count($options)): ?>

    <?php echo $this->getChildHtml('options_js') ?>

    <div id="product_composite_configure_fields_options" class="<?php echo $this->getIsLastFieldset() ? 'last-fieldset' : '' ?>">
        <h4><?php echo Mage::helper('payperrentals')->__('Custom Options') ?></h4>

        <div class="product-options">
            <dl>
                <?php foreach ($options as $option): ?>
                    <?php echo $this->getOptionHtml($option); ?>
                <?php endforeach; ?>
            </dl>
        </div>
    </div>

<?php endif; ?>
